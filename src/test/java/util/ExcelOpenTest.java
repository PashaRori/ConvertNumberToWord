package util;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Workbook;
import org.junit.Assert;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;

import static org.testng.Assert.assertEquals;
import static util.ConstantData.*;
import static util.ExcelOpen.getArrayWithValues;

class ExcelOpenTest {
    private static String valueCellString;
    private static String valueCellNumber;
    private static String valueCellData;
    private static String valueCellDouble;
    private List<String> RUSSIAN_DIFFERENCE_EXCEL_ARRAY = Arrays.asList("ноль", "один", "два", "три", "четыре");
    private List<String> ENGLISH_DIFFERENCE_EXCEL_ARRAY = Arrays.asList("zero", "one", "two");
    private List<String> RUSSIAN_EXCEL_ARRAY = Arrays.asList("ноль", "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать", "тридцать", "сорок", "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяноста", "сто", "двести", "триста", "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот", "тысяч", "миллион", "миллиард", "триллион", "квадриллион", "квинтиллион", "секстиллион", "септиллион", "октиллион", "нониллион", "дециллион", "андециллион", "дуодециллион", "тридециллион", "квадридециллион", "квинтидециллион", "секстидециллион", "септидециллион", "октидециллион", "нонидециллион", "децидециллион");
    private List<String> ENGLISH_EXCEL_ARRAY = Arrays.asList("zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety", "one hundred", "two hundred", "three hundred", "four hundred", "five hundred", "six hundred", "seven hundred", "eight hundred", "nine hundred", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "quintillion", "decillion", "andecillion", "duodecillion", "tridecillion", "quadrillion", "quintidecillion", "sextidecillion", "septidecillion", "octidecillion", "nonidecillion", "decidecillion");


    @BeforeAll
    static void beforeTest() {
        Workbook workbook = ExcelOpen.openFile(CELL_TEST_FILE);
        valueCellString = ExcelOpen.convertCell(workbook.getSheetAt(0).getRow(0).getCell(0));
        valueCellNumber = ExcelOpen.convertCell(workbook.getSheetAt(0).getRow(1).getCell(0));
        valueCellData = ExcelOpen.convertCell(workbook.getSheetAt(0).getRow(2).getCell(0));
        valueCellDouble = ExcelOpen.convertCell(workbook.getSheetAt(0).getRow(3).getCell(0));
    }

    @Test
    void compareValueCellStringExcelAndValueString() {
        assertEquals(CELL_STRING, valueCellString);
    }

    @Test
    void compareValueCellNumberExcelAndValueString() {
        assertEquals(CELL_NUMBER, valueCellNumber);
    }

    @Test
    void compareValueCellDataExcelAndValueString() {
        assertEquals(CELL_DATA, valueCellData);
    }

    @Test
    void compareValueCellDoubleExcelAndValueString() {
        assertEquals(CELL_DOUBLE, valueCellDouble);
    }

    @Test
    void compareValueExcelArrayAndArrayOnRussian() {
        assertEquals(RUSSIAN_EXCEL_ARRAY, getArrayWithValues(LANGUAGE_RUSSIAN));
    }

    @Test
    void compareValueExcelArrayAndNotFullArrayOnRussian() {
        Assert.assertNotEquals(RUSSIAN_DIFFERENCE_EXCEL_ARRAY, getArrayWithValues(LANGUAGE_RUSSIAN));
    }

    @Test
    void compareValueExcelArrayAndArrayOnEnglish() {
        assertEquals(ENGLISH_EXCEL_ARRAY, getArrayWithValues(LANGUAGE_ENGLISH));
    }

    @Test
    void compareValueExcelArrayAndNotFullArrayOnEnglish() {
        Assert.assertNotEquals(ENGLISH_DIFFERENCE_EXCEL_ARRAY, getArrayWithValues(LANGUAGE_ENGLISH));
    }
}